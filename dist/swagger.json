{
    "openapi": "3.0.0",
    "info": {
        "title": "Note-Board-API",
        "description": "Note Board API built for api testing",
        "contact": {
            "email": "jobsdzihinss@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:5510",
            "description": "SwaggerHub API Auto Mocking"
        }
    ],
    "tags": [
        {
            "name": "developers",
            "description": "Operations available to regular developers"
        }
    ],
    "paths": {
        "/api/kanbanboard/kanbanapi/kanbandata": {
            "get": {
                "tags": [
                    "developers"
                ],
                "summary": "get all kanban data in kanbanboard",
                "description": "Get all the kanban data from any project\n",
                "operationId": "getAllKanbanData",
                "responses": {
                    "200": {
                        "description": "all kanban data fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KanbanData"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/api/kanbanboard/kanbanapi/kanbandata/{id}": {
            "get": {
                "tags": [
                    "developers"
                ],
                "summary": "get kanban data by id",
                "description": "Get kanban data according to its id\n",
                "operationId": "getKanbanDataById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that generated by mongoose",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "kanban data with id fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KanbanData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            },
            "post": {
                "tags": [
                    "developers"
                ],
                "summary": "update kanban data by its id",
                "description": "Update the current exist kanban data by its id",
                "operationId": "updateKanbanDataById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that generated by mongoose",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Inventory item to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KanbanData"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "kanban data updated!"
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    }
                }
            }
        },
        "/api/kanbanboard/kanbanapi/kanbandata/project/{projectId}": {
            "get": {
                "tags": [
                    "developers"
                ],
                "summary": "get kanban data by projectId",
                "description": "Get kanban data according to its projectId\n",
                "operationId": "getKanbanDataByProjectId",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "id that named by user when creating project",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "kanban data with projectId fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KanbanData"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/api/kanbanboard/kanbanapi/kanbanproject": {
            "get": {
                "tags": [
                    "developers"
                ],
                "summary": "get all kanban project",
                "description": "Get kanban project that created by user\n",
                "operationId": "getAllKanbanProject",
                "responses": {
                    "200": {
                        "description": "kanban project fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KanbanProject"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "KanbanData": {
                "required": [
                    "creator",
                    "issuedDate",
                    "projectId",
                    "section",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "example": "project-1"
                    },
                    "creator": {
                        "type": "string",
                        "example": "Louis"
                    },
                    "assignedTo": {
                        "type": "string",
                        "example": "N/A"
                    },
                    "title": {
                        "type": "string",
                        "example": "Implement swaggerUI"
                    },
                    "desc": {
                        "type": "string",
                        "example": "Implementing swaggerUI to NodeJS"
                    },
                    "issuedDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-08-29T09:12:33.001Z"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-08-29T09:12:33.001Z"
                    },
                    "section": {
                        "type": "string",
                        "example": "TODO"
                    },
                    "comment": {
                        "type": "string",
                        "example": "N.A"
                    }
                }
            },
            "KanbanProject": {
                "required": [
                    "establishDate",
                    "establisher",
                    "name",
                    "projectId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "example": "project-1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Project 1"
                    },
                    "establisher": {
                        "type": "string",
                        "example": "Louis"
                    },
                    "establishDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-08-29T09:12:33.001Z"
                    },
                    "status": {
                        "type": "string",
                        "example": "Processing"
                    }
                }
            }
        }
    }
}
